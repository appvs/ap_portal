{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Настройка Manjaro (Arch)\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_terminal_line = _resolveComponent(\"terminal-line\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.blocks, block => {\n    return _openBlock(), _createBlock(_component_terminal_line, {\n      key: block.title,\n      title: block.title,\n      lines: block.lines\n    }, null, 8 /* PROPS */, [\"title\", \"lines\"]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","_renderList","$data","blocks","block","_createBlock","_component_terminal_line","key","title","lines"],"sources":["/home/ap/projects/ap_portal/src/views/AppArch.vue"],"sourcesContent":["<template>\n\t<h2>Настройка Manjaro (Arch)</h2>\n\n\t<div class=\"content\">\n\t\t<terminal-line\n\t\t\tv-for=\"block in blocks\"\n\t\t\t:key=\"block.title\"\n\t\t\t:title=\"block.title\"\n\t\t\t:lines=\"block.lines\"\n\t\t></terminal-line>\n\t</div>\n</template>\n\n<script>\nimport TerminalLine from '@/components/TerminalLine.vue'\n\nexport default {\n\tcomponents: {TerminalLine},\n\tdata() {\n\t\treturn {\n\t\t\tblocks: [\n\t\t\t\t{\n\t\t\t\t\ttitle: 'YAY',\n\t\t\t\t\tlines: ['sudo pacman -S yay']\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Альтернативный YAY',\n\t\t\t\t\tlines: ['pacman -S --needed git base-devel','git clone https://aur.archlinux.org/yay.git','cd yay && makepkg -si']\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'NVM',\n\t\t\t\t\tlines: [\n\t\t\t\t\t\t'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash',\n\t\t\t\t\t\t'export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"',\n\t\t\t\t\t\t'[ -s \"$NVM_DIR/nvm.sh\" ] && \\\\. \"$NVM_DIR/nvm.sh\"',\n\t\t\t\t\t\t'Reopen your terminal'\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Alias',\n\t\t\t\t\tlines: [\n\t\t\t\t\t\t'sudo nano .zshrc',\n\t\t\t\t\t\t'alias vpn=\"sudo openfortivpn -c /etc/openfortivpn/my_config\" ',\n\t\t\t\t\t\t'alias sshdev=\"ssh popov@172.16.31.17\"',\n\t\t\t\t\t\t'alias sshprod=\"ssh popov@172.16.31.16\"',\n\t\t\t\t\t\t'alias ll=\"ls -la\"',\n\t\t\t\t\t\t'alias arm=\"cd projects/arm-content && code . && cd frontside && npm run serve\"',\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Установка пакетов',\n\t\t\t\t\tlines: ['yay -S steam gamemode calibre visual-studio-code-bin discord filezilla telegram-desktop go docker docker-compose etcher vlc diodon']\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Настройки клавиатуры ARDOR',\n\t\t\t\t\tlines: [\n\t\t\t\t\t\t'sudo nano /etc/modprobe.d/hid_apple.conf',\n\t\t\t\t\t\t'options hid_apple fnmode=2'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}\n</script>"],"mappings":";gCACCA,mBAAA,CAAiC,YAA7B,0BAAwB;;EAEvBC,KAAK,EAAC;AAAS;;;uBAHrBC,mBAAA,CAAAC,SAAA,SACCC,UAAiC,EAEjCJ,mBAAA,CAOM,OAPNK,UAOM,I,kBANLH,mBAAA,CAKiBC,SAAA,QATnBG,WAAA,CAKmBC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBADbC,YAAA,CAKiBC,wBAAA;MAHfC,GAAG,EAAEH,KAAK,CAACI,KAAK;MAChBA,KAAK,EAAEJ,KAAK,CAACI,KAAK;MAClBC,KAAK,EAAEL,KAAK,CAACK"},"metadata":{},"sourceType":"module","externalDependencies":[]}